---
import Author from "./author.astro";
import Avatar from "./avatar.astro";
import Quote from "./quote.astro";
import Slide from "./slide.astro";

interface Slide {
  imageUrl: string;
  quote: string;
  name: string;
  job: string;
}

interface Props {
  slides: Slide[];
  class?: string;
}

const { slides, class: classes, ...rest } = Astro.props;
---

<ul class:list={["slider", classes]} {...rest}>
  {
    slides.map(({ imageUrl, quote, name, job }, index) => (
      <Slide class:list={[{ hide: index !== 0 }]}>
        <Avatar src={imageUrl} alt={name} slot="slide-media" />
        <Fragment slot="slide-content">
          <Quote>{quote}</Quote>
          <Author name={name} job={job} />
        </Fragment>
      </Slide>
    ))
  }
</ul>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const slides = document.querySelectorAll(".slide");
    const buttons = document.querySelectorAll(".slide__btn");
    let index = 0;

    const showSlide = (index: number) => {
      slides.forEach((slide, i) => {
        slide.classList.toggle("hide", i !== index);
      });
    };

    showSlide(index);

    buttons.forEach((button) =>
      button.addEventListener("click", () => {
        if (button.innerHTML.includes("prev")) {
          index = index - 1;
          index = index < 0 ? slides.length - 1 : index;
        } else {
          index = index + 1;
          index = index >= slides.length ? 0 : index;
        }
        showSlide(index);
      })
    );
  });
</script>
